{"ast":null,"code":"import { ALL_COMPLAINTS, CURRENT_USER, FAIL } from './types';\nimport api from '../utils/api';\nimport { resetall } from './status';\nexport const loaduser = msg => dispatch => {\n  dispatch({\n    type: CURRENT_USER,\n    payload: msg\n  });\n};\nexport const getallcomplaints = () => async dispatch => {\n  try {\n    const res = await api.get('/user/allcomplaints');\n    dispatch({\n      type: ALL_COMPLAINTS,\n      payload: res.data\n    });\n  } catch (err) {\n    console.error(err.message);\n    dispatch({\n      type: FAIL\n    });\n  }\n};\nexport const reportuser = (x, name, username) => async dispatch => {\n  const data = {\n    x,\n    name,\n    username\n  };\n  try {\n    const res = await api.post('/user/reportuser', data);\n    if (res.data.msg) {\n      dispatch(resetall('User Reported Successfully Admin will Look into it', 'success', 'REPORT_IT'));\n    }\n  } catch (err) {\n    console.error(err.message);\n    dispatch({\n      type: FAIL\n    });\n  }\n};\nexport const deleteuserreport = _id => async dispatch => {\n  const data = {\n    _id\n  };\n  try {\n    const res = await api.post('/user/deleteuserreport', data);\n    if (res.data.msg) {\n      dispatch(getallcomplaints());\n    }\n  } catch (err) {\n    console.error(err.message);\n    dispatch({\n      type: FAIL\n    });\n  }\n};\nexport const getallusers = () => async dispatch => {\n  try {\n    const res = await api.get('/user/allusers');\n    dispatch({\n      type: ALL_COMPLAINTS,\n      payload: res.data\n    });\n  } catch (err) {\n    console.error(err.message);\n    dispatch({\n      type: FAIL\n    });\n  }\n};\nexport const deleteuser = (_id, name) => async dispatch => {\n  const data = {\n    _id,\n    name\n  };\n  try {\n    const res = await api.post('/user/deleteuser', data);\n    dispatch(resetall('Deleted User', 'success', 'DELETE_IT'));\n  } catch (err) {\n    console.error(err.message);\n    dispatch({\n      type: FAIL\n    });\n  }\n};\nexport const reportstatus = (_id, status) => async dispatch => {\n  const data = {\n    _id,\n    status\n  };\n  try {\n    const res = await api.post('/user/reportstatus', data);\n    dispatch(getallcomplaints());\n  } catch (err) {\n    console.error(err.message);\n    dispatch({\n      type: FAIL\n    });\n  }\n};","map":{"version":3,"names":["ALL_COMPLAINTS","CURRENT_USER","FAIL","api","resetall","loaduser","msg","dispatch","type","payload","getallcomplaints","res","get","data","err","console","error","message","reportuser","x","name","username","post","deleteuserreport","_id","getallusers","deleteuser","reportstatus","status"],"sources":["C:/Users/Srinivas/OneDrive/Desktop/Projects/Phone-Comparor/frontend/src/actions/user.js"],"sourcesContent":["import { ALL_COMPLAINTS, CURRENT_USER, FAIL } from './types';\r\nimport api from '../utils/api';\r\nimport { resetall } from './status';\r\n\r\nexport const loaduser = msg => dispatch => {\r\n  dispatch({\r\n    type: CURRENT_USER,\r\n    payload: msg\r\n  });\r\n};\r\n\r\nexport const getallcomplaints = () => async dispatch => {\r\n  try {\r\n    const res = await api.get('/user/allcomplaints');\r\n    dispatch({\r\n      type: ALL_COMPLAINTS,\r\n      payload: res.data\r\n    });\r\n  }\r\n  catch (err) {\r\n    console.error(err.message);\r\n    dispatch({\r\n      type: FAIL\r\n    })\r\n  }\r\n};\r\n\r\nexport const reportuser = ( x , name , username) => async dispatch => {\r\n  const data = { x, name, username }\r\n  try {\r\n    const res = await api.post('/user/reportuser',data);\r\n    if (res.data.msg) {\r\n      dispatch(resetall('User Reported Successfully Admin will Look into it', 'success', 'REPORT_IT'));\r\n    }\r\n  }\r\n  catch (err) {\r\n    console.error(err.message);\r\n    dispatch({\r\n      type: FAIL\r\n    })\r\n  }\r\n};\r\n\r\nexport const deleteuserreport = (_id) => async dispatch => {\r\n  const data = {_id}\r\n  try{\r\n    const res = await api.post('/user/deleteuserreport',data);\r\n    if(res.data.msg){\r\n      dispatch(getallcomplaints());\r\n    }\r\n  }\r\n  catch(err){\r\n    console.error(err.message);\r\n    dispatch({\r\n      type:FAIL\r\n    });\r\n  }\r\n}\r\n\r\nexport const getallusers = () => async dispatch => {\r\n  try{\r\n    const res = await api.get('/user/allusers');\r\n    dispatch({\r\n      type:ALL_COMPLAINTS,\r\n      payload:res.data\r\n    })\r\n  }\r\n  catch(err){\r\n    console.error(err.message);\r\n    dispatch({\r\n      type:FAIL\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteuser = (_id , name ) => async dispatch => {\r\n  const data = { _id , name }\r\n  try{\r\n    const res = await api.post('/user/deleteuser',data);\r\n    dispatch(resetall('Deleted User','success','DELETE_IT'));\r\n  }\r\n  catch(err){\r\n    console.error(err.message);\r\n    dispatch({\r\n      type:FAIL\r\n    })\r\n  }\r\n}\r\n\r\nexport const reportstatus = (_id,status) => async dispatch => {\r\n  const data = { _id , status}\r\n  try{\r\n    const res = await api.post('/user/reportstatus',data);\r\n    dispatch(getallcomplaints());\r\n  }\r\n  catch(err){\r\n    console.error(err.message);\r\n    dispatch({\r\n      type:FAIL\r\n    })\r\n  }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}