{"ast":null,"code":"import api from '../utils/api';\nimport { setAlert } from './alert';\nimport { resetall } from './status';\nimport { REGISTER_SUCCESS, FAIL, LOGIN_SUCCESS, LOGOUT, LOADUSER } from './types';\n\n// Register User\nexport const register = formData => async dispatch => {\n  try {\n    const res = await api.post('/auth/register', formData);\n    if (res.data.err) {\n      dispatch(setAlert('User Exists', 'danger'));\n    } else {\n      const id = res.data.user._id.toString();\n      localStorage.setItem('id', id);\n      if (localStorage.getItem('id')) {\n        dispatch({\n          type: REGISTER_SUCCESS,\n          payload: res.data\n        });\n      }\n    }\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: FAIL\n    });\n  }\n};\n\n// Login User\nexport const login = (email, password) => async dispatch => {\n  const body = {\n    email,\n    password\n  };\n  try {\n    const res = await api.post(\"/auth/login\", body);\n    if (res.data.msg) {\n      dispatch(setAlert(`${res.data.msg}`, 'danger'));\n    } else {\n      const id = res.data.user._id.toString();\n      localStorage.setItem('id', id);\n      if (localStorage.getItem('id')) {\n        dispatch({\n          type: LOGIN_SUCCESS,\n          payload: res.data\n        });\n      }\n    }\n  } catch (err) {\n    console.error(err);\n    dispatch({\n      type: FAIL\n    });\n  }\n};\nexport const loaduser = tok => async dispatch => {\n  const id = {\n    tok\n  };\n  try {\n    let res = await api.post('/auth/load', id);\n    dispatch({\n      type: LOADUSER,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: FAIL\n    });\n  }\n};\nexport const logout = () => async dispatch => {\n  localStorage.removeItem('id');\n  dispatch({\n    type: LOGOUT\n  });\n};\nexport const changepassword = (oldpass, newpass, token) => async dispatch => {\n  const body = {\n    oldpass,\n    newpass,\n    token\n  };\n  try {\n    const res = await api.post('/auth/changepassword', body);\n    if (res.data.msg === \"Done\") {\n      dispatch(resetall('Changed Password', 'success', 'UPDATE_IT'));\n    } else if (res.data.msg === 'Wrongpassword') {\n      dispatch(setAlert('Wrong Current Password', 'danger'));\n    }\n  } catch (err) {\n    dispatch({\n      type: FAIL\n    });\n  }\n};","map":{"version":3,"names":["api","setAlert","resetall","REGISTER_SUCCESS","FAIL","LOGIN_SUCCESS","LOGOUT","LOADUSER","register","formData","dispatch","res","post","data","err","id","user","_id","toString","localStorage","setItem","getItem","type","payload","console","log","login","email","password","body","msg","error","loaduser","tok","logout","removeItem","changepassword","oldpass","newpass","token"],"sources":["C:/Users/Srinivas/OneDrive/Desktop/Projects/Phone-Comparor/frontend/src/actions/auth.js"],"sourcesContent":["import api from '../utils/api';\r\nimport { setAlert } from './alert';\r\nimport { resetall } from './status';\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT,\r\n  LOADUSER\r\n} from './types';\r\n\r\n// Register User\r\nexport const register = formData => async dispatch => {\r\n  try {\r\n    const res = await api.post('/auth/register', formData);\r\n    if (res.data.err) {\r\n      dispatch(setAlert('User Exists', 'danger'));\r\n    }\r\n    else {\r\n      const id = res.data.user._id.toString();\r\n      localStorage.setItem('id', id);\r\n      if (localStorage.getItem('id')) {\r\n        dispatch({\r\n          type: REGISTER_SUCCESS,\r\n          payload: res.data\r\n        });\r\n      }\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    dispatch({\r\n      type: FAIL\r\n    });\r\n  }\r\n};\r\n\r\n// Login User\r\nexport const login = (email, password) => async dispatch => {\r\n  const body = { email, password };\r\n  try {\r\n    const res = await api.post(\"/auth/login\", body);\r\n    if (res.data.msg) {\r\n      dispatch(setAlert(`${res.data.msg}`, 'danger'));\r\n    }\r\n    else {\r\n      const id = res.data.user._id.toString();\r\n      localStorage.setItem('id', id);\r\n      if (localStorage.getItem('id')) {\r\n        dispatch({\r\n          type: LOGIN_SUCCESS,\r\n          payload: res.data\r\n        });\r\n      }\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n    dispatch({\r\n      type: FAIL\r\n    });\r\n  }\r\n};\r\n\r\nexport const loaduser = (tok) => async dispatch => {\r\n  const id = { tok };\r\n  try {\r\n    let res = await api.post('/auth/load', id);\r\n    dispatch({\r\n      type: LOADUSER,\r\n      payload: res.data\r\n    });\r\n  }\r\n  catch (err) {\r\n    dispatch({\r\n      type: FAIL\r\n    });\r\n  }\r\n}\r\n\r\nexport const logout = () => async dispatch => {\r\n  localStorage.removeItem('id');\r\n  dispatch({\r\n    type: LOGOUT\r\n  });\r\n}\r\n\r\nexport const changepassword = (oldpass, newpass, token) => async dispatch => {\r\n  const body = { oldpass, newpass, token }\r\n  try {\r\n    const res = await api.post('/auth/changepassword', body);\r\n    if (res.data.msg === \"Done\") {\r\n      dispatch(resetall('Changed Password', 'success', 'UPDATE_IT'));\r\n    }\r\n    else if (res.data.msg === 'Wrongpassword') {\r\n      dispatch(setAlert('Wrong Current Password', 'danger'));\r\n    }\r\n  }\r\n  catch (err) {\r\n    dispatch({\r\n      type: FAIL\r\n    });\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}